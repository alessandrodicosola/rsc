package it.poliba.adicosola1.rsclient.common.ui

import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.databinding.DataBindingUtil
import androidx.databinding.ViewDataBinding
import androidx.recyclerview.widget.AsyncListDiffer
import androidx.recyclerview.widget.DiffUtil
import androidx.recyclerview.widget.RecyclerView

/**
 * Base class for handling [RecyclerView.Adapter] with Data Binding Framework
 *
 * Support only ONE [GenericViewHolder]
 *
 * Use [RSObjectAdapter]
 *  @param T Base type contained by adapter
 *  @param V ViewDataBinding class generated by Android Data Binding Framework
 *  @param VH ViewHolder recycled by adapter
 *
 */

abstract class BaseAdapter<T, V : ViewDataBinding, VH : GenericViewHolder<V, T>>(
    private val factory: Factory<T, V, VH>,
    private val diffCallback: DiffUtil.ItemCallback<T>
) : RecyclerView.Adapter<VH>() {


    abstract fun getLayoutId(): Int

    private var mList: AsyncListDiffer<T>? = null

    fun updateList(newList: List<T>) {
        if (mList == null) mList = AsyncListDiffer<T>(this, diffCallback)
        mList!!.submitList(newList)
        notifyDataSetChanged()
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): VH {
        val inflater = LayoutInflater.from(parent.context)
        val binding: V = DataBindingUtil.inflate(inflater, getLayoutId(), parent, false)
        return factory.create(binding, viewType)
    }

    override fun getItemCount(): Int {
        if (mList == null) return 0
        return mList!!.currentList.count()
    }

    override fun onBindViewHolder(holder: VH, position: Int) {
        holder.bind(mList!!.currentList.elementAt(position))
    }

    /*
    *   Factory interface for delegating [GenericViewHolder] creation
    *
    */
    interface Factory<T, V : ViewDataBinding, out VH : GenericViewHolder<V, T>> {
        fun create(binding: V, viewType: Int): VH
    }
}